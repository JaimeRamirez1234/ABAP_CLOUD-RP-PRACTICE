managed; // implementation in class zbp_cd_i_travel_alfa02 unique;
//strict ( 2 ); //Uncomment this line in order to enable strict mode 2. The strict mode has two variants (strict(1), strict(2)) and is prerequisite to be future proof regarding syntax and to be able to release your BO.

define behavior for ZCD_I_TRAVEL_ALFA02 alias Travel
implementation in class zbp_travel_alfa02 unique
persistent table ztb_travel_alfa2
with additional save
lock master
authorization master ( instance )
etag master LastChangedAt
{
  create;
  update;
  delete;

  field ( readonly ) LastChangedAt, LastChangedBy, CreatedBy, CreatedAt;
  field (mandatory) AgencyId, OverallStatus, BookingFee, CurrencyCode;

  field (features : instance) TravelId, OverallStatus;

  validation validateCustomer on save { create; field CustomerId; }
  validation validateDates on save { create; field BeginDate, EndDate; }
  validation validateStatus on save { create; field OverallStatus; }

  action (features : instance) acceptTravel result [1] $self;
  action (features : instance) rejectTravel result [1] $self;

  action createTravelByTemplate result [1] $self;

  association _Booking { create (features : instance); }

  mapping for ztb_travel_alfa2 {
            TravelId = travel_id;
            AgencyId = agency_id;
            CustomerId = customer_id;
            BeginDate = begin_date;
            EndDate = end_date;
            BookingFee = booking_fee;
            TotalPrice = total_price;
            CurrencyCode = currency_code;
            Description = description;
            OverallStatus = overall_status;
            CreatedBy = created_by;
            CreatedAt = created_at;
            LastChangedBy = last_changed_by;
            LastChangedAt = last_changed_at;

  }

}

define behavior for ZCD_I_BOOKING_A2 alias Booking
implementation in class zbp_booking_alfa02 unique
persistent table ztb_booking_alf2
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
{
  update;
  delete;

  field ( readonly ) TravelId;
  field (mandatory) CarrierId, ConnectionId, FlightDate, BookingStatus;

  validation validateStatus on save { field BookingStatus; }

  determination calculateTotalFlightPrice on modify { field FlightPrice, CurrencyCode; }

  association _Travel;
  association _BookSupplement { create; }

  mapping for ztb_booking_alf2 {
            TravelId = travel_id;
            BookingId = booking_id;
            BookingDate = booking_date;
            CustomerId = customer_id;
            CarrierId = carrier_id;
            ConnectionId = connection_id;
            FlightDate = flight_date;
            FlightPrice = flight_price;
            CurrencyCode = currency_code;
            BookingStatus = booking_status;
            LastChangedAt = last_changed_at;
  }

}

define behavior for ZCD_I_BOOKSUPPL_ALFA02 alias BookSupplement
implementation in class zbp_booksuppl_alfa02 unique
with unmanaged save
//persistent table ztb_booksuppl_a2
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
{

  field ( readonly ) TravelId, BookingId;
  field ( mandatory : create ) SupplementId, Price;

  update;
  delete;

  determination calculateTotalSupplimPrice on modify { field Price, CurrencyCode; }


  association _Travel;
  association _Booking;

//mapping for ztb_booksuppl_a2 corresponding;

  mapping for ztb_booksuppl_a2 {
            TravelId = travel_id;
            BookingId = Booking_id;
            BookingSupplementId = booking_supplement_id;
            Price = price;
            CurrencyCode = currency_code;
            LastChangedAt = last_changed_at;
  }
}